
1.Shell Quoting Mechanisms:
----------------------------
- Shell quoting mechanisms
- The Metacharacters:  
- Unix Shell provides various metacharacters which have special meaning while using them in any Shell Script and causes termination of a word unless quoted.

ex: * ? [ ] ' " \ $ ; & ( ) | ^ < > new-line space tab

#!/bin/sh

echo Hello; Word

o/p:
----
Hello
./test.sh: line 2: Word: command not found

shell returned 127

#!/bin/sh

echo Hello\; Word

o/p: Hello; Word

#!/bin/sh

echo "I have \$1200"

o/p:
-----
I have $1200


1.Quoting & Description:
-------------------------
Single quote : All special characters between these quotes lose their special meaning.
------------

# echo '<-$1500.**>; (update?) [y|n]'

Double quote: Most special characters between these quotes lose their special meaning with these exceptions âˆ’
-------------
VAR=ZARA
echo "$VAR owes <-\$1500.**>; [ as of (`date +%m/%d`) ]"

$
`
\$
\'
\"
\\
Backslash : Any character immediately following the backslash loses its special meaning.
----------



2.Shell Input/Output Redirections:
-----------------------------------------
- we will discuss in detail about the Shell input/output redirections. Most Unix system commands take input from your 
  terminal and send the resulting output back to your terminal

Output Redirection:
-------------------
- The output from a command normally intended for standard output can be easily diverted to a file instead.
- If the notation > file is appended to any command that normally writes its output to standard output, 
  the output of that command will be written to file instead of your terminal.

# who > users

$ cat users
oko         tty01   Sep 12 07:30
ai          tty15   Sep 12 13:32
ruth        tty21   Sep 12 10:10
pat         tty24   Sep 12 13:07
steve       tty25   Sep 12 13:03
$






Input Redirection:
------------------
- The commands that normally take their input from the standard input can have their input redirected from a file in this manner


$wc -l << EOF
   This is a simple lookup program 
	for good (and bad) restaurants
	in Cape Town.
EOF

Ex:
----
#!/bin/sh

cat << EOF
This is a simple lookup program 
for good (and bad) restaurants
in Cape Town.
EOF

ex:
----
#!/bin/sh

filename=test.txt
vi $filename <<EndOfCommands
i
This file was created automatically from
a shell script

EndOfCommands
